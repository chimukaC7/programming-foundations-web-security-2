Never trust users
-

- Trust no one. That may sound paranoid, but it is an important security principle. It's similar to the principle of lease privilege, but it goes beyond just access privileges. Only extend trust as far as you must. You can't know every user's intentions, especially not ahead of time. Now, in your regular life, you can be a bit more trusting and give people the benefit of the doubt. But for security, you need to adopt the opposite mindset. Be paranoid. Every user is a potential hacker. This is especially true when building internet-connected systems. Our threat model has to include anonymous strangers who can access our servers from around the world. Verifying user identities online is a fundamental security challenge. It's difficult to know who's sitting at the keyboard, even a user who presents identifying information, such as a username and password, or a user who's on an authorized device. They may have had their credentials or device stolen. A user might simply forget to log out of their account from a public computer. They may have left their password on a sticky note on their monitor. You have to consider that the Betty Smith logging into your server at 2:00 a.m. may not be the same Betty Smith you had coffee with last week. Now, this also applies to you too. Do not put too much trust into your own accounts. Your credentials can be stolen. Someone can sit at your desk when you walk away. Or malware can be performing actions in the background without you knowing. Even users that you can verify can be a threat. These are called insider threats. It's when a user with legitimate access decides to abuse that access. A happy employee today might become an unhappy employee tomorrow. That unhappy user may decide to perform actions or take information with them before they leave. A user might give into temptation or agree to something malicious in exchange for money, or to help out a friend. People are complicated, and their feelings and motivations can change. Be especially cautious of giving privileged access to contractors. Contractors have a weird status, as both insiders and outsiders. You have to grant them a fair amount of trust to allow them to do their job, but they may not be as well vetted as salaried employees, nor as loyal to the organization. Contractors are often transient, so it's important to make it easy to revoke their access privileges once they leave. Even well-meaning users can cause problems. An accidental click can delete an important file. A typo can break a configuration. If a web application has a form for users to submit information, users may try to include HTML or JavaScript, or they may cut and paste text from a word processor, which includes formatting or special characters. Now, these users don't intend to be malicious, but you have to be on your guard against basic human mistakes too. Users can be tricked. In the book Ghost in the Machine, the famous hacker Kevin Mitnick recounts that much of his computer hacking was done by calling people on the phone and convincing them that he was trustworthy. Then, he would get them to perform actions for him or tell him details that would help him hack into their servers. We can love our users. We can trust them in real life, but we should never trust them when we're building secure online systems.