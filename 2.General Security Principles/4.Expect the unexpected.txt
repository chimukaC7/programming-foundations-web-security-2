Expect the unexpected
- Our next core security principle is to always expect the unexpected. Security is not like chess where you can watch someone's move and then respond to it. Security has to be proactive, not reactive. You must assume that you will be hacked. Your job is to figure out how it will happen ahead of time. You have to prevent the crime before it happens. It's sometimes referred to as a mystery in reverse. Now this task may seem daunting until you gain some experience doing it. You have to consider each part of your website and ask what are all the things that a user could try? Often, vulnerabilities are found in what we call edge cases. Most users will use a website exactly as we expect. It's easy for us to plan for those cases when we build the site. The well-worn path should not have any bugs or unexpected quirks. A few users will take unexpected actions. Our code is to anticipate and handle these extraordinary cases appropriately. If not, they may become vulnerabilities. These are cases we're not expecting. To find them, we have to use our imaginations. Challenge your assumptions and have fun with it. You can think of it as evil brainstorming. Let me provide an example to demonstrate the process. Imagine a global search box at the top of a website that will search the entire site for a string of text. Now the expected path, sometimes called the happy path, is for the user to enter a word or two from the dictionary into the global search box. The happy path is what happens when everything goes according to plan. Now we also want to consider less happy outcomes to help identify edge cases. We might consider some of these following questions. What if the user enters no text? What if they enter too much text? What if they paste formatted text from their clipboard? Or enter symbols? What if they enter emojis or other high ASCII characters or multi-byte characters from other languages like Chinese or Arabic? Can the query be written such that when the search is complete, the HTML or JavaScript on the results page would be modified? What if the user duplicates the original form and puts them on a different server and then submits that using an edited version? Some of these may seem unlikely. But that's what it means to look for those edge cases and to expect the unexpected